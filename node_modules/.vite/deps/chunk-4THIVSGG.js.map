{
  "version": 3,
  "sources": ["../../vuetify/src/components/VBtn/VBtn.tsx", "../../vuetify/src/composables/selectLink.ts"],
  "sourcesContent": ["// Styles\nimport './VBtn.sass'\n\n// Components\nimport { VBtnToggleSymbol } from '@/components/VBtnToggle/VBtnToggle'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { VProgressCircular } from '@/components/VProgressCircular'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Composables\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\nimport { IconValue } from '@/composables/icons'\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { makeLoaderProps, useLoader } from '@/composables/loader'\nimport { makeLocationProps, useLocation } from '@/composables/location'\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useSelectLink } from '@/composables/selectLink'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport type VBtnSlots = {\n  default: []\n  prepend: []\n  append: []\n  loader: []\n}\n\nexport const makeVBtnProps = propsFactory({\n  active: {\n    type: Boolean,\n    default: undefined,\n  },\n  symbol: {\n    type: null,\n    default: VBtnToggleSymbol,\n  },\n  flat: Boolean,\n  icon: [Boolean, String, Function, Object] as PropType<boolean | IconValue>,\n  prependIcon: IconValue,\n  appendIcon: IconValue,\n\n  block: Boolean,\n  stacked: Boolean,\n\n  ripple: {\n    type: Boolean,\n    default: true,\n  },\n\n  text: String,\n\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeDimensionProps(),\n  ...makeElevationProps(),\n  ...makeGroupItemProps(),\n  ...makeLoaderProps(),\n  ...makeLocationProps(),\n  ...makePositionProps(),\n  ...makeRoundedProps(),\n  ...makeRouterProps(),\n  ...makeSizeProps(),\n  ...makeTagProps({ tag: 'button' }),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'elevated' } as const),\n}, 'v-btn')\n\nexport const VBtn = genericComponent<VBtnSlots>()({\n  name: 'VBtn',\n\n  directives: { Ripple },\n\n  props: makeVBtnProps(),\n\n  emits: {\n    'group:selected': (val: { value: boolean }) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { loaderClasses } = useLoader(props)\n    const { locationStyles } = useLocation(props)\n    const { positionClasses } = usePosition(props)\n    const { roundedClasses } = useRounded(props)\n    const { sizeClasses, sizeStyles } = useSize(props)\n    const group = useGroupItem(props, props.symbol, false)\n    const link = useLink(props, attrs)\n\n    const isActive = computed(() => {\n      if (props.active !== undefined) {\n        return props.active\n      }\n\n      if (link.isLink.value) {\n        return link.isActive?.value\n      }\n\n      return group?.isSelected.value\n    })\n    const isDisabled = computed(() => group?.disabled.value || props.disabled)\n    const isElevated = computed(() => {\n      return props.variant === 'elevated' && !(props.disabled || props.flat || props.border)\n    })\n    const valueAttr = computed(() => {\n      if (props.value === undefined) return undefined\n\n      return Object(props.value) === props.value\n        ? JSON.stringify(props.value, null, 0) : props.value\n    })\n\n    function onClick (e: MouseEvent) {\n      if (isDisabled.value) return\n\n      link.navigate?.(e)\n      group?.toggle()\n    }\n\n    useSelectLink(link, group?.select)\n\n    useRender(() => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasPrepend = !!(props.prependIcon || slots.prepend)\n      const hasAppend = !!(props.appendIcon || slots.append)\n      const hasIcon = !!(props.icon && props.icon !== true)\n      const hasColor = (\n        (group?.isSelected.value && (!link.isLink.value || link.isActive?.value)) ||\n        (!group || link.isActive?.value)\n      )\n\n      return (\n        <Tag\n          type={ Tag === 'a' ? undefined : 'button' }\n          class={[\n            'v-btn',\n            group?.selectedClass.value,\n            {\n              'v-btn--active': isActive.value,\n              'v-btn--block': props.block,\n              'v-btn--disabled': isDisabled.value,\n              'v-btn--elevated': isElevated.value,\n              'v-btn--flat': props.flat,\n              'v-btn--icon': !!props.icon,\n              'v-btn--loading': props.loading,\n              'v-btn--stacked': props.stacked,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            hasColor ? colorClasses.value : undefined,\n            densityClasses.value,\n            elevationClasses.value,\n            loaderClasses.value,\n            positionClasses.value,\n            roundedClasses.value,\n            sizeClasses.value,\n            variantClasses.value,\n            props.class,\n          ]}\n          style={[\n            hasColor ? colorStyles.value : undefined,\n            dimensionStyles.value,\n            locationStyles.value,\n            sizeStyles.value,\n            props.style,\n          ]}\n          disabled={ isDisabled.value || undefined }\n          href={ link.href.value }\n          v-ripple={[\n            !isDisabled.value && props.ripple,\n            null,\n            props.icon ? ['center'] : null,\n          ]}\n          onClick={ onClick }\n          value={ valueAttr.value }\n        >\n          { genOverlays(true, 'v-btn') }\n\n          { !props.icon && hasPrepend && (\n            <span key=\"prepend\" class=\"v-btn__prepend\">\n              { !slots.prepend ? (\n                <VIcon\n                  key=\"prepend-icon\"\n                  icon={ props.prependIcon }\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"prepend-defaults\"\n                  disabled={ !props.prependIcon }\n                  defaults={{\n                    VIcon: {\n                      icon: props.prependIcon,\n                    },\n                  }}\n                  v-slots:default={ slots.prepend }\n                />\n              )}\n            </span>\n          )}\n\n          <span class=\"v-btn__content\" data-no-activator=\"\">\n            { (!slots.default && hasIcon) ? (\n              <VIcon\n                key=\"content-icon\"\n                icon={ props.icon }\n              />\n            ) : (\n              <VDefaultsProvider\n                key=\"content-defaults\"\n                disabled={ !hasIcon }\n                defaults={{\n                  VIcon: {\n                    icon: props.icon,\n                  },\n                }}\n              >\n                { slots.default?.() ?? props.text }\n              </VDefaultsProvider>\n            )}\n          </span>\n\n          { !props.icon && hasAppend && (\n            <span key=\"append\" class=\"v-btn__append\">\n              { !slots.append ? (\n                <VIcon\n                  key=\"append-icon\"\n                  icon={ props.appendIcon }\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"append-defaults\"\n                  disabled={ !props.appendIcon }\n                  defaults={{\n                    VIcon: {\n                      icon: props.appendIcon,\n                    },\n                  }}\n                  v-slots:default={ slots.append }\n                />\n              )}\n            </span>\n          )}\n\n          { !!props.loading && (\n            <span key=\"loader\" class=\"v-btn__loader\">\n              { slots.loader?.() ?? (\n                <VProgressCircular\n                  color={ typeof props.loading === 'boolean' ? undefined : props.loading }\n                  indeterminate\n                  size=\"23\"\n                  width=\"2\"\n                />\n              )}\n            </span>\n          )}\n        </Tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VBtn = InstanceType<typeof VBtn>\n", "// Utilities\nimport { nextTick, watch } from 'vue'\n\n// Types\nimport type { UseLink } from './router'\n\nexport function useSelectLink (link: UseLink, select?: (value: boolean, e?: Event) => void) {\n  watch(() => link.isActive?.value, isActive => {\n    if (link.isLink.value && isActive && select) {\n      nextTick(() => {\n        select(true)\n      })\n    }\n  }, {\n    immediate: true,\n  })\n}\n"],
  "mappings": "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",
  "names": ["useSelectLink", "link", "select", "watch", "isActive", "value", "isLink", "nextTick", "immediate", "makeVBtnProps", "propsFactory", "active", "type", "Boolean", "default", "undefined", "symbol", "VBtnToggleSymbol", "flat", "icon", "String", "Function", "Object", "prependIcon", "IconValue", "appendIcon", "block", "stacked", "ripple", "text", "makeBorderProps", "makeComponentProps", "makeDensityProps", "makeDimensionProps", "makeElevationProps", "makeGroupItemProps", "makeLoaderProps", "makeLocationProps", "makePositionProps", "makeRoundedProps", "makeRouterProps", "makeSizeProps", "makeTagProps", "tag", "makeThemeProps", "makeVariantProps", "variant", "VBtn", "genericComponent", "name", "directives", "Ripple", "props", "emits", "val", "setup", "_ref", "attrs", "slots", "themeClasses", "provideTheme", "borderClasses", "useBorder", "colorClasses", "colorStyles", "variantClasses", "useVariant", "densityClasses", "useDensity", "dimensionStyles", "useDimension", "elevationClasses", "useElevation", "loaderClasses", "useLoader", "locationStyles", "useLocation", "positionClasses", "usePosition", "roundedClasses", "useRounded", "sizeClasses", "sizeStyles", "useSize", "group", "useGroupItem", "link", "useLink", "isActive", "computed", "isLink", "value", "isSelected", "isDisabled", "disabled", "isElevated", "border", "valueAttr", "JSON", "stringify", "onClick", "e", "navigate", "toggle", "useSelectLink", "select", "useRender", "Tag", "hasPrepend", "prepend", "hasAppend", "append", "hasIcon", "hasColor", "_withDirectives", "_createVNode", "selectedClass", "loading", "class", "style", "href", "genOverlays", "VIcon", "VDefaultsProvider", "loader", "VProgressCircular", "_resolveDirective"]
}
